[package]
name = "websocket-test"
version = "0.1.0"
authors = ["sisou <hello@soerenschwert.de>"]
edition = "2018"

[lib]
crate-type = ["cdylib", "rlib"]

[features]
default = ["wee_alloc"]

[dependencies]
wasm-bindgen = {version = "0.2", features = ["serde-serialize"]}
wasm-bindgen-futures = "0.4"

# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = "0.1"

# `wee_alloc` is a tiny allocator for wasm that is only ~1K in code size
# compared to the default allocator's ~10K. It is slower than the default
# allocator, however.
#
# Unfortunately, `wee_alloc` requires nightly Rust when targeting wasm for now.
wee_alloc = { version = "0.4", optional = true }

indexeddb = { git = "https://github.com/1Password/indexeddb-rs/" }
# nimiq-keys = { git = "https://github.com/nimiq/core-rs-albatross.git", branch = "albatross" }
# nimiq-utils = { git = "https://github.com/nimiq/core-rs-albatross.git", branch = "albatross" }

cfg-if = "0.1"
log = "0.4"
serde = "1"
wasm-logger = "0.2"

js-sys = "0.3"

[dependencies.web-sys]
version = "0.3"
features = [
    'console',
]

[dependencies.futures]
default-features = false
version = "^0.3"

[dev-dependencies]
serde = {version = "1", features = ["derive"]}
wasm-bindgen-test = "0.3"

[profile.release]
# Tell `rustc` to optimize for small code size.
opt-level = "s"
